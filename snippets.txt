

vscode âžœ /workspaces/learning-django-2/wisdompets (main) $ poetry run python manage.py shell
Python 3.10.13 (main, Oct  4 2023, 17:08:16) [GCC 11.4.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> from adoptions.models import Pet
>>> Pet.objects.all()
<QuerySet [<Pet: Pet object (1)>, <Pet: Pet object (2)>, <Pet: Pet object (3)>, <Pet: Pet object (4)>, <Pet: Pet object (5)>, <Pet: Pet object (6)>, <Pet: Pet object (7)>, <Pet: Pet object (8)>, <Pet: Pet object (9)>, <Pet: Pet object (10)>, <Pet: Pet object (11)>, <Pet: Pet object (12)>, <Pet: Pet object (13)>, <Pet: Pet object (14)>, <Pet: Pet object (15)>, <Pet: Pet object (16)>, <Pet: Pet object (17)>, <Pet: Pet object (18)>, <Pet: Pet object (19)>, <Pet: Pet object (20)>, '...(remaining elements truncated)...']>
>>> pets = Pet.objects.all()
>>> pet = pets[0]
>>> pet.name
'Pepe'
>>> pet.age
0
>>> pet.description
'Six-month-old Pepe is very active and is always keeping us on our toes.'
>>> pet.sex
'M'
>>> pet.id
1
>>> pet = Pet.objects.get(id=1)
>>> pet.name
'Pepe'
>>> pet = Pet.objects.get(id=2)
>>> pet.name
'Scooter'
>>> pet = Pet.objects.get(id=9999)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "/workspaces/learning-django-2/.venv/lib/python3.10/site-packages/django/db/models/manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/workspaces/learning-django-2/.venv/lib/python3.10/site-packages/django/db/models/query.py", line 637, in get
    raise self.model.DoesNotExist(
adoptions.models.Pet.DoesNotExist: Pet matching query does not exist.
>>> Pet.objects.get(age=1)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "/workspaces/learning-django-2/.venv/lib/python3.10/site-packages/django/db/models/manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/workspaces/learning-django-2/.venv/lib/python3.10/site-packages/django/db/models/query.py", line 640, in get
    raise self.model.MultipleObjectsReturned(
adoptions.models.Pet.MultipleObjectsReturned: get() returned more than one Pet -- it returned 3!
>>> pet.vaccinations.all()
<QuerySet []>
>>> pet = Pet.objects.get(id=7)
>>> pet.vaccinations.all()
<QuerySet [<Vaccine: Canine Parvo>, <Vaccine: Canine Distemper>, <Vaccine: Canine Rabies>, <Vaccine: Canine Leptospira>]>
>>>